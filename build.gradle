plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name + "-" + project.minecraft_version
version = project.mod_version
group = project.maven_group

minecraft {
	accessWidener "src/main/resources/goml.accesswidener"
}

repositories {
	maven { url = "https://maven.fabricmc.net/" }
	maven { url = 'https://jitpack.io' }
	maven { url = 'https://maven.nucleoid.xyz'}

	maven {
		url = "https://maven.jamieswhiteshirt.com/libs-release/"
		content {
			includeGroup 'com.jamieswhiteshirt'
		}
	}

	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}

	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include "com.jamieswhiteshirt:rtree-3i-lite-fabric:${project.rtree_version}"
	modImplementation "com.jamieswhiteshirt:rtree-3i-lite-fabric:${project.rtree_version}"

	// Config
	modImplementation 'com.github.Draylar.omega-config:omega-config-base:1.0.4-beta'
	include 'com.github.Draylar.omega-config:omega-config-base:1.0.4-beta:min'

	// CCA for data
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"

	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cca_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cca_version}"

	// Flight
	modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
	include "io.github.ladysnake:PlayerAbilityLib:${pal_version}"

	modImplementation include("eu.pb4:polymer:${polymer_version}")
	modImplementation include("fr.catcore:server-translations-api:${translations_version}")


	// Dev testing
	modCompileOnly modRuntime ('curse.maven:BLAST-349938:3350311')
}

processResources {
	inputs.property "version", project.version

	filesMatching('fabric.mod.json') {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
